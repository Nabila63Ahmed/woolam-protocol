%% PROTOCOL: WL: Woo-Lam Mutual Authentiction Protocol
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%HLPSL:

role alice(A, B, S     : agent,
               Kas   : symmetric_key,
               SND_BA, RCV_BA : channel (dy))
played_by A def=

  local State : nat,
        Na, X : text,
        Kab: symmetric_key

  init State := 1

  transition
   
    1.  State  = 1 /\ RCV_BA(start) 
    =|> State':= 2 /\ Na' := new() /\ SND_BA(A.Na')

    2.  State  = 2 /\ RCV_BA(B.X')
    =|>	State':= 3 /\ SND_BA({A.B.Na'.X'}_Kas)
      /\ witness(A,B,alice_bob_nb,X')

    3.  State = 3 /\ RCV_BA({B.Na'.X'.Kab'}_Kas.{Na'.X'}_Kab')
    =|>	State':= 4 /\ SND_BA({X'}_Kab')

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role bob(A, B, S      : agent,
               Kbs    : symmetric_key,
               SND_AB, RCV_AB, SND_SB, RCV_SB  : channel (dy)) 
played_by B def=

  local State : nat,
	Nb, Y : text,
  Z: {agent.agent.text.text}_symmetric_key, 
  W: {agent.text.text.symmetric_key}_symmetric_key,
  Kab: symmetric_key

  init State := 1

  transition 

    1.  State  = 1 /\ RCV_AB(A.Y')
    =|> State':= 2 /\ Nb' := new() /\ SND_AB(B.Nb')

    2.  State  = 2 /\ RCV_AB(Z')
    =|> State':= 3 /\ SND_SB(Z'. {A.B.Y'.Nb'}_Kbs)

    3.  State = 3 /\ RCV_SB(W', {A.Y'.Nb'.Kab'}_Kbs)
    =|> State':= 4 /\ SND_AB(W'. {Y'.Nb'}_Kab')
      /\ request(B,A,alice_bob_nb,Nb')

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role server(A, B, S     : agent,
            Kas, Kbs   : symmetric_key,
            SND_BS, RCV_BS : channel (dy))
played_by A def=

  local State : nat,
        U, V : text,
        Kab: symmetric_key

  init State := 1

  transition
   
    1.  State  = 1 /\ RCV_BS({A.B.U'.V'}_Kas.{A.B.U'.V'}_Kbs) 
    =|> State':= 2 /\ Kab' := new() /\ SND_BS({B.U'.V'.Kab'}_Kas.{A.U'.V'.Kab'}_Kbs)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

role environment() def=

    local SAB, SBA, SBS, SSB, RAB, RBA, RBS, RSB : channel (dy)

    const i, a, b, s : agent,
	  kas, kbs : symmetric_key,
	  alice_bob_nb  : protocol_id

    intruder_knowledge = {i, a, b, s}

    composition

	      alice(a, b, s, kas, SBA, RBA)
     /\ bob(a, b, s, kbs, SAB, RAB, SSB, RSB)
     /\ server(a, b, s, kas, kbs, SBS, RBS)

end role

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

goal

  authentication_on alice_bob_nb

end goal

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

environment()
  
